{"version":3,"file":"static/webpack/static/development/pages/decode.js.f6a4b9ed57ce447f2e5a.hot-update.js","sources":["webpack:///./pages/decode.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Root from '../components/Root';\nimport * as ethers from 'ethers';\nimport txDecoder from 'ethereum-tx-decoder';\nimport {Transaction as Tx} from 'ethereumjs-tx';\nconst BN = require('bignumber.js');\nconst traverse = require('traverse');\nconst {v2: abi} = require('../lib/erc20-abi');\n\nconst useStyles = makeStyles(theme => ({\n  cont: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '800px',\n    margin: 'auto'\n  },\n  btn: {\n    margin: '10px 0 60px 0'\n  }\n}));\n\nfunction formatEventValues(values, precision = 1e0) {\n  const trimValues = Object.keys(values).reduce((ret, k) => {\n    if (!/^\\d+$/.test(k) && k !== 'length') {\n      ret[k] = values[k];\n    }\n    return ret;\n  }, {});\n  const ret = traverse(trimValues).map(function(v) {\n    if (v instanceof ethers.utils.BigNumber) {\n      console.log('bignumber');\n      const bn = new BN(v.toString()).dividedBy(precision);\n      this.update(bn.toString());\n    }\n  });\n  return ret;\n}\n\nfunction decodeTx(rawTx) {\n  const ethTx = new Tx(rawTx);\n  const tx = txDecoder.decodeTx(rawTx);\n  const fnDecoder = new txDecoder.FunctionDecoder(abi);\n  const data = fnDecoder.decodeFn(tx.data);\n  tx.gasPrice = tx.gasPrice.toString();\n  tx.gasLimit = tx.gasLimit.toString();\n  tx.decodeData = formatEventValues(data);\n  console.log(tx);\n  return Object.assign(\n    {from: '0x' + ethTx.getSenderAddress().toString('hex')},\n    tx\n  );\n}\n\nlet Decode = function() {\n  const classes = useStyles();\n  const [rawTx, setRawTx] = useState('0xf8aa098501dcd6500083015f9094dac17f958d2ee523a2206206994597c13d831ec780b844a9059cbb000000000000000000000000f8a73320e1a463cd9ac1bf8953e332428218b47600000000000000000000000000000000000000000000000000000000625773a026a0caff69431f28238518ecd11f380cfc01088679d7baef48f8e1512c048dbe7aa9a0654c8fdd7ba37cfd75e6edc261a9f929e6cea7d8f983bf81d231b8f74d807b5a');\n  const [plainTx, setPlainTx] = useState('');\n  return (\n    <Root>\n      <div className={classes.cont}>\n        <TextField\n          multiline\n          id='raw'\n          label='Raw transaction'\n          rows={3}\n          className={classes.tx}\n          value={rawTx}\n          onChange={e => setRawTx(e.target.value)}\n          margin='normal'\n          variant='outlined'\n        />\n        <Button\n          size={'large'}\n          variant='contained'\n          color='secondary'\n          className={classes.btn}\n          onClick={_ => {\n            try {\n              const tx = decodeTx(rawTx);\n              setPlainTx(JSON.stringify(tx, null, 2));\n            } catch (e) {}\n          }}>\n          Decode Tx\n        </Button>\n        <TextField\n          multiline\n          disabled\n          rows={15}\n          id='output-box'\n          label='Decoded Transaction'\n          className={classes.lgTx}\n          value={plainTx}\n          margin='normal'\n          variant='outlined'\n        />\n      </div>\n    </Root>\n  );\n};\n\nexport default Decode;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;AAAA;AACA;AAWA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;;;;A","sourceRoot":""}