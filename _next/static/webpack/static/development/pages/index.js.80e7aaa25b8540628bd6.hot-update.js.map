{"version":3,"file":"static/webpack/static/development/pages/index.js.80e7aaa25b8540628bd6.hot-update.js","sources":["webpack:///./lib/core.js","webpack:///./pages/index.js"],"sourcesContent":["import * as ethers from 'ethers';\nimport * as stringify from 'json-stable-stringify';\n\nexport function jsonHash(obj) {\n  const json = stringify(obj);\n  return ethers.utils.keccak256(\n    ethers.utils.toUtf8Bytes(json)\n  );\n}\n\nexport async function providerSignObj(provider, obj) {\n  // const msg = `coke bet unlock session wallet`;\n  // window.__provider = provider;\n  let msg = stringify(obj);\n  try {\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n    msg = ethers.utils.toUtf8Bytes(msg);\n    /*\n    if (provider._web3Provider.isTrust) {\n      window.alert('debug: prepare sign');\n    }\n    */\n    const sig = await provider.send('personal_sign', [ethers.utils.hexlify(msg), addr.toLowerCase()]);\n    /*\n    if (provider._web3Provider.isTrust) {\n      window.alert(`debug: sig returns, ${sig}`);\n    }\n    */\n    return sig;\n  } catch (e) {\n    /*\n    if (provider._web3Provider.isTrust) {\n      window.alert(`debug: exception occured, ${e.message}`);\n    }\n    */\n    return null;\n  }\n}\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport grey from '@material-ui/core/colors/grey';\nimport { connect } from 'react-redux';\nimport {providerSignObj} from '../lib/core';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    fontSize: theme.spacing(2),\n    position: 'fixed',\n    width: '100%',\n    top: 0,\n    padding: theme.spacing(2),\n    backgroundColor: grey[500]\n  },\n  body: {\n    marginTop: theme.spacing(8),\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4)\n  },\n  textField: {\n    width: theme.spacing(50)\n  },\n  line: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\nconst Index = function({provider}) {\n  const classes = useStyles();\n  const [inputObj, setInputObj] = useState('');\n  const [sig, setSig] = useState('');\n\n  return (\n    <React.Fragment>\n      <div className={classes.header}>My Ethereum Tools</div>\n      <div className={classes.body}>\n        <div className={classes.line}>\n          <TextField\n            multiline\n            id='input-box'\n            label='Input Object'\n            className={classes.textField}\n            value={inputObj}\n            onChange={e => setInputObj(e.target.value)}\n            margin='normal'\n            variant='outlined'\n          />\n          <Button\n            variant='outlined'\n            color='secondary'\n            className={classes.btn}\n            onClick={_ => providerSignObj(provider, inputObj).then(setSig)}>\n            JSON sign\n          </Button>\n          <TextField\n            multiline\n            disabled\n            id='output-box'\n            label='Signature'\n            className={classes.textField}\n            value={sig}\n            margin='normal'\n            variant='outlined'\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(({provider}) => ({provider}))(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;;;;;;AARA;AAAA;AACA;AADA;AAaA;AAbA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAjBA;AAAA;AACA;AAuBA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}