{"version":3,"file":"static/webpack/static/development/pages/index.js.d2e1f942c4e702f7e60e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport grey from '@material-ui/core/colors/grey';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport {signJSON, decodeSeed, validSeedOrPrivKey} from '../lib/core';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    fontSize: theme.spacing(3),\n    position: 'fixed',\n    width: '100%',\n    top: 0,\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    backgroundColor: grey[500],\n    display: 'flex',\n    alignItems: 'center'\n  },\n  logo: {\n    height: theme.spacing(8),\n    marginRight: theme.spacing(3)\n  },\n  body: {\n    marginTop: theme.spacing(14),\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4)\n  },\n  lgTx: {\n    width: theme.spacing(80)\n  },\n  mdTx: {\n    width: theme.spacing(50)\n  },\n  smTx: {\n    width: theme.spacing(20)\n  },\n  mgRight: {\n    marginRight: theme.spacing(10)\n  },\n  block: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  line: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction usePrivKey(seed, idx) {\n  const [account, setAccount] = useState({privKey: '', address: ''});\n  useEffect(() => {\n    if (validSeedOrPrivKey(seed)) {\n      setAccount(decodeSeed(seed, idx));\n    } else {\n      setAccount({privKey: '', address: ''});\n    }\n  }, [seed, idx]);\n  return account;\n}\n\nconst Index = function({provider}) {\n  const classes = useStyles();\n  const [json, setJson] = useState('');\n  const [seedOrPrivKey, setSeedOrPrivKey] = useState('');\n  const [seedIdx, setSeedIdx] = useState(0);\n  const [sig, setSig] = useState('');\n  const {privKey, address} = usePrivKey(seedOrPrivKey, seedIdx);\n\n  return (\n    <React.Fragment>\n      <div className={classes.header}>\n        <img className={classes.logo} src={`${process.env.BACKEND_URL}/static/logo.png`} />\n        <div>My Ethereum Tools</div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.block}>\n          <TextField\n            multiline\n            id='seeds'\n            label='Seed words or private key'\n            className={classes.lgTx}\n            value={seedOrPrivKey}\n            onChange={e => setSeedOrPrivKey(e.target.value)}\n            margin='normal'\n            variant='outlined'\n          />\n          <div className={classes.line}>\n            <TextField\n              id='seed-idx'\n              label='Input Seed Index'\n              className={clsx(classes.smTx, classes.mgRight)}\n              value={seedIdx}\n              onChange={e => setSeedIdx(e.target.value)}\n              margin='normal'\n              variant='outlined'\n            />\n            <TextField\n              disabled\n              id='address'\n              label='address'\n              className={classes.mdTx}\n              value={address}\n              margin='normal'\n              variant='outlined'\n            />\n          </div>\n          <TextField\n            multiline\n            id='json'\n            label='Input JSON Object'\n            className={classes.lgTx}\n            value={json}\n            onChange={e => setJson(e.target.value)}\n            margin='normal'\n            variant='outlined'\n          />\n          <Button\n            size={'large'}\n            variant='contained'\n            color='secondary'\n            className={classes.btn}\n            onClick={_ => {\n              try {\n                const {signature} = signJSON(privKey, JSON.parse(json));\n                setSig(signature);\n              } catch (e) {}\n            }}>\n            JSON sign\n          </Button>\n          <TextField\n            multiline\n            disabled\n            id='output-box'\n            label='Signature'\n            className={classes.lgTx}\n            value={sig}\n            margin='normal'\n            variant='outlined'\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(({provider}) => ({provider}))(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAvCA;AAAA;AACA;AA4CA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}